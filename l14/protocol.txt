vitos@vitos-hp16:/mnt/c/important/docs/mai/labs/l14$ cat makefile
CC = gcc
CFLAGS = -Wall -Wextra

main:
        $(CC) $(CFLAGS) -o main.out main.c
        ./main.out
vitos@vitos-hp16:/mnt/c/important/docs/mai/labs/l14$ cat main.c
#include <stdio.h>
#include <stdlib.h>

void printmd(long long** m, long long n) {
    for (long long i = 0; i < n; ++i) {
        for (long long j = 0; j < n; ++j) {
            printf("%lld ", m[i][j]);
        }
        printf("\n");
    }
}

void printm(long long** m, long long n) {
    long long j1 = n - 1, j2 = 1;

    while (1) {
        if (j1 > -1) {
            long long  i = 0, j = j1;
            for (; j > -1; --j) {
                printf("%lld ", m[i][j]);
                ++i;
            }
            i -= 2;
            ++j;
            for (; i > -1; --i) {
                printf("%lld ", m[i][j]);
                ++j;
            }
        }
        if (j2 < n) {
            long long  i = n - 1, j = j2;
            for (; j < n; ++j) {
                printf("%lld ", m[i][j]);
                --i;
            }
            i += 2;
            --j;
            for (; i < n; ++i) {
                printf("%lld ", m[i][j]);
                --j;
            }
        }
        j1 -= 2;
        j2 += 2;
        if (j1 < 0 && j2 > n - 1) {
            printf("\n");
            break;
        }
    }
}

int main() {
    long long n;

    while (scanf("%lld", &n) != EOF){
        long long** m = (long long**) malloc(n * sizeof(long long*));
        for (long long i = 0; i < n; ++i) {
            m[i] = (long long*) malloc(sizeof(long long) * n);
        }

        for (long long i = 0; i < n; ++i) {
            for (long long j = 0; j < n; ++j) {
                scanf("%lld", &m[i][j]);
            }
        }

        printf("\n");
        printm(m, n);
        printf("\n");
    }

    printf("End of program.\n");

    return 0;
}
vitos@vitos-hp16:/mnt/c/important/docs/mai/labs/l14$ make
gcc -Wall -Wextra -o main.out main.c
./main.out
3
1 2 3
4 5 6
7 8 9

3 5 7 4 2 8 6 9 1

4
15 13 7 1
14 6 2 10
5 3 9 11
4 8 12 16

1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16

7
1  2  3  4  5  6  7
8  9  10 11 12 13 14
15 16 17 18 19 20 21
22 23 24 25 26 27 28
29 30 31 32 33 34 35
36 37 38 39 40 41 42
43 44 45 46 47 48 49

7 13 19 25 31 37 43 36 30 24 18 12 6 44 38 32 26 20 14 21 27 33 39 45 5 11 17 23 29 22 16 10 4 46 40 34 28 35 41 47 3 9 15 8 2 48 42 49 1

End of program.
